{"ast":null,"code":"var _jsxFileName = \"D:\\\\S6 BCA B\\\\edwin\\\\front-rep-almost-main\\\\src\\\\components\\\\Home\\\\Orders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const [username, setUsername] = useStat('');\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    const getToken = () => {\n      return localStorage.getItem('token');\n    };\n    const token = getToken();\n    if (!token) {\n      navigate('/login');\n    } else {\n      console.log('Token fetched:', token);\n      const payload = token.split('.')[1];\n      console.log('Token Payload:', payload); // Log the token payload for debugging\n      try {\n        const decodedPayload = atob(payload);\n        console.log('Decoded Payload:', decodedPayload); // Log the decoded payload for debugging\n\n        // Extract 'id' as 'userId' and 'username' from decoded payload\n        const {\n          id: userId,\n          username: decodedUsername\n        } = JSON.parse(decodedPayload);\n        console.log('User Id:', userId); // Log the extracted user ID for debugging\n        console.log('Username:', decodedUsername); // Log the extracted username for debugging\n\n        // Set the extracted username to the state variable\n        setUsername(decodedUsername);\n        setUserId(userId);\n        // Optionally, you can also set the email state variable if it's available in the payload\n        // setEmail(decodedEmail);\n      } catch (error) {\n        console.error('Error decoding token payload:', error);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"alo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Orders, \"WVnEfgRBsH2vxDVmDQEmX1Hb4es=\", true);\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Orders","_s","username","setUsername","useStat","userId","setUserId","useState","getToken","localStorage","getItem","token","navigate","console","log","payload","split","decodedPayload","atob","id","decodedUsername","JSON","parse","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/S6 BCA B/edwin/front-rep-almost-main/src/components/Home/Orders.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst Orders = () => {\r\n    const [username, setUsername] = useStat('');\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getToken = () => {\r\n            return localStorage.getItem('token');\r\n        };\r\n    \r\n        const token = getToken();\r\n        if (!token) {\r\n            navigate('/login');\r\n        } else {\r\n            console.log('Token fetched:', token);\r\n            const payload = token.split('.')[1];\r\n            console.log('Token Payload:', payload); // Log the token payload for debugging\r\n            try {\r\n                const decodedPayload = atob(payload);\r\n                console.log('Decoded Payload:', decodedPayload); // Log the decoded payload for debugging\r\n                \r\n                // Extract 'id' as 'userId' and 'username' from decoded payload\r\n                const { id: userId, username: decodedUsername } = JSON.parse(decodedPayload);\r\n                console.log('User Id:', userId); // Log the extracted user ID for debugging\r\n                console.log('Username:', decodedUsername); // Log the extracted username for debugging\r\n                \r\n                // Set the extracted username to the state variable\r\n                setUsername(decodedUsername);\r\n                setUserId(userId);\r\n                // Optionally, you can also set the email state variable if it's available in the payload\r\n                // setEmail(decodedEmail);\r\n            } catch (error) {\r\n                console.error('Error decoding token payload:', error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      alo\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Orders\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,OAAO,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAExCV,SAAS,CAAC,MAAM;IACZ,MAAMW,QAAQ,GAAGA,CAAA,KAAM;MACnB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACxC,CAAC;IAED,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACG,KAAK,EAAE;MACRC,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,MAAM;MACHC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,KAAK,CAAC;MACpC,MAAMI,OAAO,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnCH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,OAAO,CAAC,CAAC,CAAC;MACxC,IAAI;QACA,MAAME,cAAc,GAAGC,IAAI,CAACH,OAAO,CAAC;QACpCF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEG,cAAc,CAAC,CAAC,CAAC;;QAEjD;QACA,MAAM;UAAEE,EAAE,EAAEd,MAAM;UAAEH,QAAQ,EAAEkB;QAAgB,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;QAC5EJ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAET,MAAM,CAAC,CAAC,CAAC;QACjCQ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEM,eAAe,CAAC,CAAC,CAAC;;QAE3C;QACAjB,WAAW,CAACiB,eAAe,CAAC;QAC5Bd,SAAS,CAACD,MAAM,CAAC;QACjB;QACA;MACJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACZV,OAAO,CAACU,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAGR,oBACExB,OAAA;IAAAyB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAA3B,EAAA,CA1CKD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA4CZ,eAAeA,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}